name: Kernel Builder
on:
  workflow_dispatch:
    inputs:
      KERNEL_URL:
        description: 'Kernel Source URL'
        required: true
        default: 'https://github.com/VThang51/android_kernel_samsung_a13xx'
      KERNEL_BRANCH:
        description: 'Kernel Source Branch'
        required: true
        default: 'A135FXXU3CWB9'
      GCC_URL:
        description: 'GCC Toolchain URL'
        required: true
        default: 'https://android.googlesource.com/platform/prebuilts/gcc/linux-x86/aarch64/aarch64-linux-android-4.9/'
      GCC_BRANCH:
        description: 'GCC Toolchain Branch'
        required: true
        default: 'android-msm-bonito-4.9-android12L'
      GCC_PATH:
        description: 'GCC Toolchain Path'
        required: true
        default: 'toolchain/gcc/linux-x86/aarch64/aarch64-linux-android-4.9'
      CLANG_URL:
        description: 'Clang GCC-Toolchain URL'
        required: true
        default: 'https://android.googlesource.com/platform/prebuilts/clang/host/linux-x86/'
      CLANG_BRANCH:
        description: 'Clang GCC-Toolchain Branch'
        required: true
        default: 'android-msm-bonito-4.9-android12L'
      CLANG_PATH:
        description: 'Clang GCC-Toolchain Path'
        required: true
        default: 'toolchain/clang/host/linux-x86'
      COMMAND:
        description: 'Build Command (or File)'
        required: true
        default: 'export ARCH=arm64 && export PLATFORM_VERSION=13 && make ARCH=arm64 exynos850-a13xx_defconfig && make ARCH=arm64 -j16'
jobs:
  Building-Kernel:
    runs-on: ubuntu-20.04
    permissions:
      contents: write
    steps:
      - name: Checkout
        uses: actions/checkout@master

      - name: Free up space
        run: bash sh/freeupspace.sh -yes

      - name: Set up the Compilation environment
        run: sudo apt-get install git-core gnupg flex bison build-essential zip curl zlib1g-dev gcc-multilib g++-multilib libc6-dev-i386 lib32ncurses5-dev x11proto-core-dev libx11-dev lib32z-dev ccache libgl1-mesa-dev libxml2-utils xsltproc unzip

      - name: Clone Kernel Source
        run: |
          git config --global user.email "${{ github.actor }}@users.noreply.github.com"
          git config --global user.name "${{ github.actor }}"
          git clone -b ${{ inputs.KERNEL_BRANCH }} ${{ inputs.KERNEL_URL }} kernel
        continue-on-error: false

      - name: Clone GCC Toolchain
        run: |
          git clone -b ${{ inputs.GCC_BRANCH }} ${{ inputs.GCC_URL }} kernel/${{ inputs.GCC_PATH }}
        continue-on-error: false

      - name: Clone Clang GCC-Toolchain
        run: |
          git clone -b ${{ inputs.CLANG_BRANCH }} ${{ inputs.CLANG_URL }} kernel/${{ inputs.CLANG_PATH }}
        continue-on-error: false

      - name: Building Kernel
        run: |
          cd kernel
          ${{ inputs.COMMAND }}

      - name: Upload to Artifacts
        uses: actions/upload-artifact@v3
        with:
          name: Kernel
          path: |
            kernel/arch/arm64/boot/Image
            kernel/drivers/*/*.ko
